[project]
name = "psplines"
version = "0.1.3"
description = "Implementation of PSplines in Python"
readme = "README.md"
authors = [
    { name = "Grayson Bellamy", email = "gbellamy@umd.edu" }
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.21",
    "scipy>=1.7",
    "pymc>=5.0",
    "matplotlib>=3.4",
    "pytensor>=2.0",
    "arviz>=0.12",
    "joblib>=1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "ruff",
    "mypy",
]

[project.urls]
Homepage = "https://github.com/graysonbellamy/psplines"
Repository = "https://github.com/graysonbellamy/psplines"
Issues = "https://github.com/graysonbellamy/psplines/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mkdocs>=1.6.1",
    "mkdocs-jupyter>=0.25.1",
    "mkdocs-material>=9.6.18",
    "mkdocstrings[python]>=0.30.0",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.10",
    "scipy-stubs>=1.15.3.0",
    "types-setuptools>=80.9.0.20250822",
]

[tool.ruff]
line-length = 88
fix = true

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "C4", "SIM", "TCH"]
ignore = ["E501"]  # Line length handled by formatter

[tool.ruff.lint.per-file-ignores]
"src/*" = ["N803", "N806"]  # Allow uppercase argument/variable names for matrices (B, D, etc.)
"tests/*" = ["N803", "N806"]  # Allow non-lowercase argument/variable names in tests  
"examples/*" = ["N803", "N806", "E402"]  # Allow non-lowercase names and imports not at top

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
install_types = true
non_interactive = true
ignore_missing_imports = false
strict_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pymc",
    "pymc.*",
    "arviz",
    "arviz.*", 
    "joblib",
    "joblib.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--strict-markers --disable-warnings -v"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
show_missing = true
skip_covered = false
